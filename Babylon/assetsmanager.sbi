;Babylon.js for SpiderBasic : Assets manager 

;-Private
Procedure AssetsManagerDefine()
  !if (typeof(v_bjsassetsmanager) == "undefined") {
  !   BABYLON.Tools.Log("AssetsManager is not initialized (UseAssetsManager()")
  !   return false
  !} else {
  !   return true
  !}
EndProcedure

Procedure.s GetPathPart(url.s)
  !return v_url.substr(0, v_url.lastIndexOf("/"))
EndProcedure

Procedure.s GetFilePart(url.s)
  !return v_url.substring(v_url.lastIndexOf('/')+1);
EndProcedure

;-
;-Public
Procedure UseAssetsManager(ProgressCallback = #False)
  !v_bjsassetsmanager = new BABYLON.AssetsManager(v_bjscurrentscene);
  
  If ProgressCallback <> #False
    !v_bjsassetsmanager.onProgress = function(remainingCount, totalCount, lastFinishedTask) {
    !  v_progresscallback(remainingCount, totalCount, lastFinishedTask.name)
    !};    
  EndIf
EndProcedure

Procedure AssetsManagerColor(Color)
  Protected r = Red(Color)
  Protected g = Green(Color)
  Protected b = Blue(Color)
  
  Protected RGB.s = "rgb("+ Str(r) + "," + Str(g) + "," + Str(b) + ")" 

  !v_bjsengine.loadingUIBackgroundColor = v_rgb 
EndProcedure

Procedure AssetsManagerAdd(Name.s, FileName.s, CallBack, CallBackError)  
  Protected PathPart.s = GetPathPart(FileName) + "\"
  Protected FilePart.s = GetFilePart(FileName)
    
  If AssetsManagerDefine()
    Select GetExtensionPart(FileName)  
      Case "babylon", "obj"
        !var meshprocess = v_bjsassetsmanager.addMeshTask(v_name, "", v_pathpart, v_filepart + '?' + (new Date()).getTime());
        !meshprocess.onSuccess = function (task) {
        !   task.loadedMeshes[0].position = BABYLON.Vector3.Zero();
        !   v_callback(v_name, task.loadedMeshes[0])
        !} 
    
        !meshprocess.onError = function (task, message, exception) {
        !  v_callback(v_name, message)
        !}
        
      Case "jpg", "png", "gif"
        !var textureprocess = v_bjsassetsmanager.addTextureTask(v_name, v_pathpart + v_filepart + '?' + (new Date()).getTime());
        !textureprocess.onSuccess = function (task) {
        !   v_callback(v_name, task.texture)
        !} 
    
        !textureprocess.onError = function (task, message, exception) {
        !  v_callback(v_name, message)
        !}
        
      Case "wav", "mp3", "ogg"
        !var musicprocess = v_bjsassetsmanager.addBinaryFileTask(v_name, v_pathpart + v_filepart + '?' + (new Date()).getTime());
        !musicprocess.onSuccess = function (task) {
        !   var sound = new BABYLON.Sound(v_name, task.data, v_scene,
        !       function () {
        !          v_callback(v_name, sound)
        !       })
        !} 
        
        !musicprocess.onError = function (task, message, exception) {
        !  v_callback(v_name, message)
        !}
        
      Case "txt"
        !var textprocess = v_bjsassetsmanager.addTextFileTask(v_name, v_pathpart + v_filepart + '?' + (new Date()).getTime());
        !textprocess.onSuccess= function (task) {
        !   v_callback(v_name, task.text)
        !} 
        
        !textprocess.onError = function (task, message, exception) {
        !  v_callback(v_name, message)
        !}
        
      Default 
        Debug "Unable to import your file " + FileName
    EndSelect   
  EndIf 
EndProcedure

Procedure AssetsManagerPrompt(Text.s)
  If AssetsManagerDefine()
    !v_bjsengine.loadingUIText = v_text;
  EndIf 
EndProcedure

Procedure AssetsManagerLoad()
  If AssetsManagerDefine()
    !v_bjsassetsmanager.load();    
  EndIf
EndProcedure

; IDE Options = SpiderBasic 2.20 (Windows - x86)
; Folding = --
; iOSAppOrientation = 0
; AndroidAppOrientation = 0
; EnableXP
; CompileSourceDirectory